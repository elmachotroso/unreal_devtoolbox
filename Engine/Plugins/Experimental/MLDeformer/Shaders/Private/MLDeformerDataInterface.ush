// Copyright Epic Games, Inc. All Rights Reserved.

#include "/Plugin/ComputeFramework/Private/ComputeKernelCommon.ush"

uint DI_LOCAL(NumVertices);
uint DI_LOCAL(InputStreamStart);
float3 DI_LOCAL(VertexDeltaScale);
float3 DI_LOCAL(VertexDeltaMean);
float DI_LOCAL(VertexDeltaMultiplier);
float DI_LOCAL(DebugScale);

Buffer<float> DI_LOCAL(PositionDeltaBuffer);
Buffer<uint> DI_LOCAL(VertexMapBuffer);

DI_IMPL_READ(ReadNumVertices, uint, void)
{
	return DI_LOCAL(NumVertices);
}

DI_IMPL_READ(ReadPositionDelta, float3, uint VertexIndex)
{
	uint BufferIndex = DI_LOCAL(VertexMapBuffer)[VertexIndex + DI_LOCAL(InputStreamStart)] * 3;
	float3 Delta = float3(DI_LOCAL(PositionDeltaBuffer)[BufferIndex], DI_LOCAL(PositionDeltaBuffer)[BufferIndex + 1], DI_LOCAL(PositionDeltaBuffer)[BufferIndex + 2]);
	float3 FinalDelta = Delta * DI_LOCAL(VertexDeltaScale) + DI_LOCAL(VertexDeltaMean);
	return FinalDelta * DI_LOCAL(VertexDeltaMultiplier);
}

DI_IMPL_READ(ReadDebugScale, float, void)
{
	return DI_LOCAL(DebugScale);
}
