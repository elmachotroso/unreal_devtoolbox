// Copyright Epic Games, Inc. All Rights Reserved.

#include "/Plugin/ComputeFramework/Private/ComputeKernelCommon.ush"

uint DI_LOCAL(NumVertices);
uint DI_LOCAL(InputStreamStart);
uint DI_LOCAL(HeatMapMode);
float DI_LOCAL(HeatMapScale);
float DI_LOCAL(GroundTruthLerp);
uint DI_LOCAL(GroundTruthBufferSize);

StructuredBuffer<float3> DI_LOCAL(PositionGroundTruthBuffer);
Buffer<uint> DI_LOCAL(VertexMapBuffer);

DI_IMPL_READ(ReadNumVertices, uint, void)
{
	return DI_LOCAL(NumVertices);
}

DI_IMPL_READ(ReadPositionGroundTruth, float3, uint VertexIndex)
{
	uint BufferIndex = DI_LOCAL(VertexMapBuffer)[VertexIndex + DI_LOCAL(InputStreamStart)];
	if (BufferIndex >= DI_LOCAL(GroundTruthBufferSize))
	{
		return float3(0, 0, 0);
	}
	return DI_LOCAL(PositionGroundTruthBuffer)[BufferIndex];
}

DI_IMPL_READ(ReadHeatMapMode, uint, void)
{
	return DI_LOCAL(HeatMapMode);
}

DI_IMPL_READ(ReadHeatMapScale, float, void)
{
	return DI_LOCAL(HeatMapScale);
}

DI_IMPL_READ(ReadGroundTruthLerp, float, void)
{
	return DI_LOCAL(GroundTruthLerp);
}
