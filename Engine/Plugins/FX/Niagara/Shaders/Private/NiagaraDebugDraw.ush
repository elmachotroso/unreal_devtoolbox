// Copyright Epic Games, Inc. All Rights Reserved.

#pragma once

/*=============================================================================
	NiagaraDebugDraw.ush
	Includes for debug drawing
=============================================================================*/

void PackLine(inout RWBuffer<float> OutBuffer, uint InstanceIndex, float3 InPosition0, float3 InPosition1, uint InPackedColor)
{
	uint FloatOffset = InstanceIndex * 7;

	OutBuffer[FloatOffset + 0] = InPosition0.x;
	OutBuffer[FloatOffset + 1] = InPosition0.y;
	OutBuffer[FloatOffset + 2] = InPosition0.z;

	OutBuffer[FloatOffset + 3] = InPosition1.x;
	OutBuffer[FloatOffset + 4] = InPosition1.y;
	OutBuffer[FloatOffset + 5] = InPosition1.z;

	OutBuffer[FloatOffset + 6] = asfloat(InPackedColor);
}

void PackLine(inout RWBuffer<float> OutBuffer, uint InstanceIndex, float3 InPosition0, float3 InPosition1, float4 InColor)
{
	uint PackedColor = 0;
	PackedColor  = uint(saturate(InColor.x) * 255.0f) << 24;
	PackedColor |= uint(saturate(InColor.y) * 255.0f) << 16;
	PackedColor |= uint(saturate(InColor.z) * 255.0f) << 8;
	PackedColor |= uint(saturate(InColor.w) * 255.0f) << 0;
	PackLine(OutBuffer, InstanceIndex, InPosition0, InPosition1, PackedColor);
}

void UnpackLine(in Buffer<float> InBuffer, uint InstanceIndex, out float3 OutPosition0, out float3 OutPosition1, out float4 OutColor)
{
	uint FloatOffset = InstanceIndex * 7;

	OutPosition0.x = InBuffer[FloatOffset + 0];
	OutPosition0.y = InBuffer[FloatOffset + 1];
	OutPosition0.z = InBuffer[FloatOffset + 2];

	OutPosition1.x = InBuffer[FloatOffset + 3];
	OutPosition1.y = InBuffer[FloatOffset + 4];
	OutPosition1.z = InBuffer[FloatOffset + 5];

	uint PackedColor = asuint(InBuffer[FloatOffset + 6]);
	OutColor.x = float((PackedColor >> 24) & 0xff) / 255.0f;
	OutColor.y = float((PackedColor >> 16) & 0xff) / 255.0f;
	OutColor.z = float((PackedColor >>  8) & 0xff) / 255.0f;
	OutColor.w = float((PackedColor >>  0) & 0xff) / 255.0f;
}
