// Copyright Epic Games, Inc. All Rights Reserved.

/*=============================================================================
	LumenCardTiles.ush
=============================================================================*/

#pragma once

#define CARD_TILE_SIZE 8
#define NULL_PACKED_CARD_TILE 0xFFFFFFFF

struct FCardTileData
{
	uint CardPageIndex;
	uint2 TileCoord;
};

FCardTileData UnpackCardTileData(uint PackedTile)
{
	FCardTileData TileData;
	TileData.CardPageIndex = PackedTile & 0xFFFFFF;
	TileData.TileCoord.x = (PackedTile >> 24) & 0xF;
	TileData.TileCoord.y = (PackedTile >> 28) & 0xF;
	return TileData;
}

uint PackCardTileData(FCardTileData CardTile)
{
	uint PackedTile = CardTile.CardPageIndex;
	PackedTile |= (CardTile.TileCoord.x << 24);
	PackedTile |= (CardTile.TileCoord.y << 28);
	return PackedTile;
}

struct FLightTile
{
	uint LightIndex;
	uint CardPageIndex;
	uint2 TileCoord;
};

FLightTile UnpackLightTile(uint2 PackedTile)
{
	FLightTile Tile;
	Tile.LightIndex = PackedTile.x;
	Tile.CardPageIndex = PackedTile.y & 0xFFFFFF;
	Tile.TileCoord.x = (PackedTile.y >> 24) & 0xF;
	Tile.TileCoord.y = (PackedTile.y >> 28) & 0xF;
	return Tile;
}

uint2 PackLightTile(FLightTile Tile)
{
	uint2 PackedTile;
	PackedTile.x = Tile.LightIndex;		
	PackedTile.y = Tile.CardPageIndex;
	PackedTile.y |= (Tile.TileCoord.x << 24);
	PackedTile.y |= (Tile.TileCoord.y << 28);
	return PackedTile;
}